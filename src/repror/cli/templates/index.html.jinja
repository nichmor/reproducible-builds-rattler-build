<!doctype html>
<html>

<head>
    <meta charset="UTF-8" />
    <title>Rattler Build - Reproducibility</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/alpinejs@3.x.x/dist/cdn.min.js" defer></script>
    <script src="https://kit.fontawesome.com/d97e8cb8b0.js" crossorigin="anonymous" defer></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@4.4.3/dist/chart.umd.min.js"></script>
</head>
<script>
    function tabsComponent() {
        return {
            activeTab: 1,
        };
    }

    function timeAgo(timestamp) {
        const now = new Date();
        const date = new Date(timestamp);
        const diffInSeconds = Math.floor((now - date) / 1000);

        const seconds = diffInSeconds;
        const minutes = Math.floor(seconds / 60);
        const hours = Math.floor(minutes / 60);
        const days = Math.floor(hours / 24);
        const weeks = Math.floor(days / 7);
        const months = Math.floor(days / 30); // Rough approximation
        const years = Math.floor(days / 365); // Rough approximation

        if (seconds < 60) {
            return `${seconds} second${seconds !== 1 ? 's' : ''} ago`;
        } else if (minutes < 60) {
            return `${minutes} minute${minutes !== 1 ? 's' : ''} ago`;
        } else if (hours < 24) {
            return `${hours} hour${hours !== 1 ? 's' : ''} ago`;
        } else if (days < 7) {
            return `${days} day${days !== 1 ? 's' : ''} ago`;
        } else if (weeks < 4) {
            return `${weeks} week${weeks !== 1 ? 's' : ''} ago`;
        } else if (months < 12) {
            return `${months} month${months !== 1 ? 's' : ''} ago`;
        } else {
            return `${years} year${years !== 1 ? 's' : ''} ago`;
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        const elements = document.querySelectorAll('[data-timestamp]');
        elements.forEach(element => {
            const timestamp = element.getAttribute('data-timestamp');
            element.textContent = timeAgo(timestamp);
        });
    });
</script>

<body class="bg-gray-100">
    <div class="container mx-auto p-4" x-data="tabsComponent()">
        <h1 class="text-4xl font-bold py-6 mx-auto">
            How Reproducible is
            <span class="font-mono">rattler-build</span>?
        </h1>
        <section>
            <h2 class="text-xl font-bold py-4">
                Introduction
            </h2>
            <p>
                This website contains some information about
                <span class="font-mono">.conda</span> packages that have been using
                <a href="https://github.com/prefix-dev/rattler-build"
                    class="text-blue-500 underline hover:text-blue-300">
                    <span class="font-mono">rattler-build</pre>
                </a> to build their packages.
            </p>

            <p>
                More information regarding what we mean by reproducibility can be found
                at the github repository for this project <a class="text-blue-500 underline hover:text-blue-300"
                    href="https://github.com/prefix-dev/reproducible-builds">Click Here</a>
            </p>
        </section>

        <!-- Reproducibility Percentages -->
        <div class="my-6">
            <h2 class="text-xl font-bold mb-2">
                Reproducibility Per Platform
            </h2>
            <p class="py-4">
                The following table shows the reproducibility of builds per platform. <br />
                Click on a platform to view the builds for that platform
            </p>
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                {% for platform, builds in by_platform.items() %}
                {% set total_builds = builds|length %}
                {% set reproducible_builds = builds|selectattr('is_success', 'equalto', True)|list|length %}
                {% set reproducibility_percentage = (reproducible_builds / total_builds) * 100 %}
                <div class="bg-white p-4 rounded shadow border cursor-pointer"
                    :class="{ 'border-blue-600 border-4': activeTab === {{loop.index}}, 'border-gray-300 border-1': activeTab !== {{loop.index}} }"
                    @click="activeTab = {{loop.index}}">
                    <h3 class="text-lg font-semibold">
                        <span class="{{ platform | platform_fa }}"></span>
                        {{ platform | capitalize }}
                    </h3>
                    <div class="flex flex-col">
                        <p>Total Builds: {{ total_builds }}</p>
                        <p>
                            Reproducible Builds: {{ reproducible_builds }}
                        </p>
                        <p>
                            Reproducibility: {{ reproducibility_percentage |
                            round(2) }}%
                        </p>
                    </div>
                </div>
                {% endfor %}
            </div>
        </div>

        <div>
            <canvas id="myChart"></canvas>
        </div>

        {% for platform, builds in by_platform.items() %}
        <div class="max-w-xl min-w-full py-2 mt-2 mb-6 overflow-x-auto" x-show="activeTab === {{loop.index}}">
            <table class="min-w-full bg-white border border-gray-300">
                <thead class="text-xs text-gray-700 uppercase bg-gray-50 dark:bg-gray-700 dark:text-gray-400">
                    <tr class="border-b">
                        <th class="py-2 px-4">Recipe Name</th>
                        <th class="py-2 px-4">Build Status</th>
                        <th class="py-2 px-4">Rebuild Status</th>
                        <th class="py-2 px-4">Time</th>
                        <th class="py-2 px-4">Reason</th>
                        <th class="py-2 px-4">
                            Github Action Link
                        </th>
                    </tr>
                </thead>
                <tbody>
                    {% for build in builds | sort(attribute='build_state') %}
                    <tr class="border-b border-dashed">
                        <td class="py-2 px-4">
                            <span class="{{build.build_state | build_state_fa}}"></span>
                            <b>{{ build.recipe_name }}</b>
                        </td>
                        <td class="py-2 px-4">
                            {{ build.build_state.value | capitalize }}
                        </td>
                        <td class="py-2 px-4">
                            {{ build.rebuild_state.value | capitalize if
                            build.rebuild_state else 'N/A' }}
                        </td>
                        <td class="py-2 px-4" data-timestamp="{{build.time}}"></td>
                        <td class="py-2 px-4">
                            <pre>{{ build.reason if build.reason else "" }}</pre>
                        </td>
                        <td class="py-2 px-4 flex justify-center">
                            <a href="{{ build.actions_url }}"
                                class="inline-block transform transition-transform duration-300 hover:translate-x-2 hover:opacity-50 ">
                                <i class="fa-solid fa-arrow-right text-m"></i>
                                <i class="fa-brands fa-github text-xl"></i>
                            </a>
                        </td>
                        <!-- <td class="py-2 px-4 border-b">
                            <button class="bg-blue-500 text-white py-1 px-3 rounded hover:bg-blue-700" onclick="viewLogs('{{ build.reason }}')">View Logs</button>
                        </td> -->
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        {% endfor %}
    </div>

    <!-- Modal for logs -->
    <div id="logModal" class="fixed inset-0 flex items-center justify-center bg-gray-800 bg-opacity-75 hidden">
        <div class="bg-white p-4 rounded shadow-lg max-w-xl w-full">
            <h2 class="text-xl font-bold mb-2">Logs</h2>
            <pre id="logContent" class="bg-gray-200 p-2 rounded h-64 overflow-y-scroll"></pre>
            <button class="bg-red-500 text-white py-1 px-3 rounded hover:bg-red-700 mt-2" onclick="closeModal()">
                Close
            </button>
        </div>
    </div>
</body>

<script>
    const ctx = document.getElementById('myChart');
    const DATA_COUNT = 7;
    const NUMBER_CFG = { count: DATA_COUNT, min: -100, max: 100 };

    const data = {
        labels: ['2021-01-01', '2021-01-02'],
        datasets: [
            {
                label: 'Builds',
                data: [10, 20],
                borderColor: 'red',
                backgroundColor: 'red',
                fill: false
            },
            {
                label: 'Rebuilds',
                data: [5, 10],
                borderColor: 'blue',
                backgroundColor: 'blue',
                fill: false
            },
        ]
    };

    const config = {
        type: 'line',
        data: data,
        options: {
            responsive: true,
            plugins: {
                title: {
                    display: true,
                    text: 'Rebuild Statistics (Linux)',
                    font: {
                        size: 16 // Change this value to the desired font size
                    }
                },
                tooltip: {
                    mode: 'index'
                },
                legend: {
                    labels: {
                        font: {
                            size: 16 // Change this value to the desired font size
                        }
                    },
                }
            },
            interaction: {
                mode: 'nearest',
                axis: 'x',
                intersect: false
            },
            scales: {
                x: {
                    title: {
                        display: true,
                        text: 'Date',
                        font: {
                            size: 16 // Change this value to the desired font size
                        }
                    },
                    ticks: {
                        font: {
                            size: 14 // Change this value to the desired font size
                        }
                    }
                },
                y: {
                    stacked: true,
                    title: {
                        display: true,
                        text: 'Number of Success(es)',
                        font: {
                            size: 16 // Change this value to the desired font size
                        }
                    },
                    ticks: {
                        font: {
                            size: 14 // Change this value to the desired font size
                        }
                    }
                }
            }
        }
    };

    new Chart(ctx, config);
</script>

</html>
