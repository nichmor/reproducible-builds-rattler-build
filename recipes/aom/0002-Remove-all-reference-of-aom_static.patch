From 1884269b6b506584bb98674c4a85c762d3e60bed Mon Sep 17 00:00:00 2001
From: Mark Harfouche <mark.harfouche@gmail.com>
Date: Sat, 11 Nov 2023 11:47:08 -0500
Subject: [PATCH 2/3] Remove all reference of aom_static

just keep search from aom_static, delete related code, and finally
remove the reference to aom_dll
---
 CMakeLists.txt                     | 31 ------------------------------
 aom_dsp/aom_dsp.cmake              | 12 ------------
 aom_mem/aom_mem.cmake              |  3 ---
 aom_ports/aom_ports.cmake          | 10 ++--------
 aom_scale/aom_scale.cmake          |  3 ---
 aom_util/aom_util.cmake            |  3 ---
 av1/av1.cmake                      |  9 ---------
 build/cmake/aom_install.cmake      |  6 +-----
 build/cmake/aom_optimization.cmake | 14 ++------------
 common/ivf_dec.cmake               |  3 ---
 10 files changed, 5 insertions(+), 89 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 8f459f39c4..7a0c183ec4 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -285,15 +285,6 @@ endif()
 add_library(aom ${target_objs_aom} $<TARGET_OBJECTS:aom_rtcd>)
 
 if(BUILD_SHARED_LIBS)
-  add_library(aom_static STATIC ${target_objs_aom} $<TARGET_OBJECTS:aom_rtcd>)
-  set_target_properties(aom_static PROPERTIES OUTPUT_NAME aom)
-  if(MSVC OR (WIN32 AND NOT MINGW))
-    # Fix race condition between the import library and the static library.
-    # Affects MSVC in all three flavors (stock, clang-cl, LLVM -- the latter
-    # sets MSVC and MINGW both to FALSE).
-    set_target_properties(aom PROPERTIES ARCHIVE_OUTPUT_NAME "aom_dll")
-  endif()
-
   if(NOT MSVC)
     # Extract version string and set VERSION/SOVERSION for the aom target.
     extract_version_string("${AOM_CONFIG_DIR}/config/aom_version.h"
@@ -318,9 +309,6 @@ endif()
 
 if(NOT WIN32 AND NOT APPLE)
   target_link_libraries(aom ${AOM_LIB_LINK_TYPE} m)
-  if(BUILD_SHARED_LIBS)
-    target_link_libraries(aom_static ${AOM_LIB_LINK_TYPE} m)
-  endif()
 endif()
 
 if(CONFIG_AV1_ENCODER AND NOT BUILD_SHARED_LIBS)
@@ -339,9 +327,6 @@ set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_rtcd aom_mem aom_scale aom)
 if(CONFIG_AV1_ENCODER AND NOT BUILD_SHARED_LIBS)
   set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_rc)
 endif()
-if(BUILD_SHARED_LIBS)
-  set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_static)
-endif()
 
 # Setup dependencies.
 if(CONFIG_THREE_PASS)
@@ -573,15 +558,9 @@ if(CONFIG_AV1_ENCODER)
     endif()
 
     set_target_properties(aom PROPERTIES LINKER_LANGUAGE CXX)
-    if(BUILD_SHARED_LIBS)
-      set_target_properties(aom_static PROPERTIES LINKER_LANGUAGE CXX)
-    endif()
 
     list(APPEND AOM_LIB_TARGETS yuv)
     target_sources(aom PRIVATE $<TARGET_OBJECTS:yuv>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:yuv>)
-    endif()
   endif()
 
   if(CONFIG_TFLITE)
@@ -629,10 +608,6 @@ if(CONFIG_AV1_ENCODER)
     find_package(PkgConfig)
     if(PKG_CONFIG_FOUND)
       pkg_check_modules(VMAF REQUIRED libvmaf)
-      if(BUILD_SHARED_LIBS)
-        target_link_libraries(aom_static
-                              PRIVATE ${VMAF_LDFLAGS} ${VMAF_LIBRARIES})
-      endif()
       target_link_libraries(aom PRIVATE ${VMAF_LDFLAGS} ${VMAF_LIBRARIES})
       target_include_directories(aom_dsp_encoder PRIVATE ${VMAF_INCLUDE_DIRS})
       if(VMAF_CFLAGS)
@@ -644,9 +619,6 @@ if(CONFIG_AV1_ENCODER)
       message(FATAL_ERROR "CONFIG_TUNE_VMAF error: pkg-config not found.")
     endif()
     set_target_properties(aom PROPERTIES LINKER_LANGUAGE CXX)
-    if(BUILD_SHARED_LIBS)
-      set_target_properties(aom_static PROPERTIES LINKER_LANGUAGE CXX)
-    endif()
   endif()
 endif()
 
@@ -770,9 +742,6 @@ endif()
 if(HAVE_PTHREAD_H AND CONFIG_MULTITHREAD)
   find_package(Threads)
   target_link_libraries(aom ${AOM_LIB_LINK_TYPE} Threads::Threads)
-  if(BUILD_SHARED_LIBS)
-    target_link_libraries(aom_static ${AOM_LIB_LINK_TYPE} Threads::Threads)
-  endif()
 endif()
 
 if(XCODE)
diff --git a/aom_dsp/aom_dsp.cmake b/aom_dsp/aom_dsp.cmake
index 4c60e5c5e9..5c43b78e73 100644
--- a/aom_dsp/aom_dsp.cmake
+++ b/aom_dsp/aom_dsp.cmake
@@ -371,9 +371,6 @@ function(setup_aom_dsp_targets)
   create_no_op_source_file("aom_av1" "c" "no_op_source_file")
   add_library(aom_dsp OBJECT "${no_op_source_file}")
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_dsp_common>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_dsp_common>)
-  endif()
   list(APPEND AOM_LIB_TARGETS aom_dsp)
 
   # Not all generators support libraries consisting only of object files. Add a
@@ -384,18 +381,12 @@ function(setup_aom_dsp_targets)
     add_library(aom_dsp_decoder OBJECT ${AOM_DSP_DECODER_SOURCES})
     list(APPEND AOM_LIB_TARGETS aom_dsp_decoder)
     target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_dsp_decoder>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_dsp_decoder>)
-    endif()
   endif()
 
   if(CONFIG_AV1_ENCODER)
     add_library(aom_dsp_encoder OBJECT ${AOM_DSP_ENCODER_SOURCES})
     list(APPEND AOM_LIB_TARGETS aom_dsp_encoder)
     target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_dsp_encoder>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_dsp_encoder>)
-    endif()
     if(CONFIG_TUNE_VMAF)
       target_include_directories(aom_dsp_encoder PRIVATE ${VMAF_INCLUDE_DIRS})
     endif()
@@ -485,9 +476,6 @@ function(setup_aom_dsp_targets)
   endif()
 
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_dsp>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_dsp>)
-  endif()
 
   # Pass the new lib targets up to the parent scope instance of
   # $AOM_LIB_TARGETS.
diff --git a/aom_mem/aom_mem.cmake b/aom_mem/aom_mem.cmake
index 346588d2db..eaee8440b8 100644
--- a/aom_mem/aom_mem.cmake
+++ b/aom_mem/aom_mem.cmake
@@ -23,7 +23,4 @@ function(setup_aom_mem_targets)
   add_library(aom_mem OBJECT ${AOM_MEM_SOURCES})
   set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_mem PARENT_SCOPE)
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_mem>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_mem>)
-  endif()
 endfunction()
diff --git a/aom_ports/aom_ports.cmake b/aom_ports/aom_ports.cmake
index e3b67e48ae..56f173ff7f 100644
--- a/aom_ports/aom_ports.cmake
+++ b/aom_ports/aom_ports.cmake
@@ -72,13 +72,10 @@ function(setup_aom_ports_targets)
 
   if("${AOM_TARGET_CPU}" MATCHES "arm|ppc")
     target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_ports>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_ports>)
-    endif()
   endif()
 
-  # Note AOM_PORTS_INCLUDES_X86 are not added to the aom_ports, aom or
-  # aom_static targets to avoid compilation issues in projects that enable ASM
+  # Note AOM_PORTS_INCLUDES_X86 are not added to the aom_ports, aom
+  # targets to avoid compilation issues in projects that enable ASM
   # language support in project(). These sources were never included in
   # libaom_srcs.*; if it becomes necessary for a particular generator another
   # method should be used.
@@ -89,8 +86,5 @@ function(setup_aom_ports_targets)
     set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} PARENT_SCOPE)
   else()
     target_sources(aom PRIVATE ${AOM_PORTS_INCLUDES})
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE ${AOM_PORTS_INCLUDES})
-    endif()
   endif()
 endfunction()
diff --git a/aom_scale/aom_scale.cmake b/aom_scale/aom_scale.cmake
index ea94dbc063..1936dfd381 100644
--- a/aom_scale/aom_scale.cmake
+++ b/aom_scale/aom_scale.cmake
@@ -27,9 +27,6 @@ function(setup_aom_scale_targets)
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_scale>)
 
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_scale>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_scale>)
-  endif()
 
   # Pass the new lib targets up to the parent scope instance of
   # $AOM_LIB_TARGETS.
diff --git a/aom_util/aom_util.cmake b/aom_util/aom_util.cmake
index 6bf4fafc4c..629f1f94be 100644
--- a/aom_util/aom_util.cmake
+++ b/aom_util/aom_util.cmake
@@ -28,7 +28,4 @@ function(setup_aom_util_targets)
   add_library(aom_util OBJECT ${AOM_UTIL_SOURCES})
   set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_util PARENT_SCOPE)
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_util>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_util>)
-  endif()
 endfunction()
diff --git a/av1/av1.cmake b/av1/av1.cmake
index 43b7665bb8..7117a63bdc 100644
--- a/av1/av1.cmake
+++ b/av1/av1.cmake
@@ -540,26 +540,17 @@ function(setup_av1_targets)
   add_library(aom_av1_common OBJECT ${AOM_AV1_COMMON_SOURCES})
   list(APPEND AOM_LIB_TARGETS aom_av1_common)
   target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_av1_common>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_av1_common>)
-  endif()
 
   if(CONFIG_AV1_DECODER)
     add_library(aom_av1_decoder OBJECT ${AOM_AV1_DECODER_SOURCES})
     set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_decoder)
     target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_av1_decoder>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_av1_decoder>)
-    endif()
   endif()
 
   if(CONFIG_AV1_ENCODER)
     add_library(aom_av1_encoder OBJECT ${AOM_AV1_ENCODER_SOURCES})
     set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} aom_av1_encoder)
     target_sources(aom PRIVATE $<TARGET_OBJECTS:aom_av1_encoder>)
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE $<TARGET_OBJECTS:aom_av1_encoder>)
-    endif()
   endif()
 
   if(HAVE_SSE2)
diff --git a/build/cmake/aom_install.cmake b/build/cmake/aom_install.cmake
index b02c7b9afe..740218b2a3 100644
--- a/build/cmake/aom_install.cmake
+++ b/build/cmake/aom_install.cmake
@@ -78,11 +78,7 @@ macro(setup_aom_install_targets)
       endif()
     endif()
 
-    if(BUILD_SHARED_LIBS)
-      set(AOM_INSTALL_LIBS aom aom_static)
-    else()
-      set(AOM_INSTALL_LIBS aom)
-    endif()
+    set(AOM_INSTALL_LIBS aom)
 
     # Setup the install rules. install() will automatically prepend
     # CMAKE_INSTALL_PREFIX to relative paths
diff --git a/build/cmake/aom_optimization.cmake b/build/cmake/aom_optimization.cmake
index 6b0c55acd7..4aa138f656 100644
--- a/build/cmake/aom_optimization.cmake
+++ b/build/cmake/aom_optimization.cmake
@@ -35,7 +35,7 @@ endfunction()
 # $opt_name is used to name the target. $target_to_update is made dependent upon
 # the created target.
 #
-# Note: this function always updates the aom, and aom_static targets because
+# Note: this function always updates the aom targets because
 # OBJECT libraries have rules that disallow the direct addition of .o files to
 # them as dependencies. Static and shared libraries do not have this limitation.
 function(add_intrinsics_object_library flag opt_name target_to_update sources)
@@ -74,9 +74,6 @@ function(add_intrinsics_object_library flag opt_name target_to_update sources)
   endif()
 
   target_sources(aom PRIVATE $<TARGET_OBJECTS:${target_name}>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:${target_name}>)
-  endif()
 
   # Add the new lib target to the global list of aom library targets.
   list(APPEND AOM_LIB_TARGETS ${target_name})
@@ -179,11 +176,7 @@ function(add_asm_library lib_name asm_sources)
                            COMMENT "Building ASM object ${asm_object}"
                            WORKING_DIRECTORY "${AOM_CONFIG_DIR}"
                            VERBATIM)
-        if(BUILD_SHARED_LIBS AND "${asm_config}" STREQUAL "static")
-          target_sources(aom_static PRIVATE "${asm_object}")
-        else()
-          target_sources(aom PRIVATE "${asm_object}")
-        endif()
+        target_sources(aom PRIVATE "${asm_object}")
       endforeach()
     endforeach()
   else()
@@ -196,9 +189,6 @@ function(add_asm_library lib_name asm_sources)
                                PRIVATE ${AOM_ROOT} ${AOM_CONFIG_DIR})
     target_compile_options(${asm_lib_name} PRIVATE ${AOM_AS_FLAGS})
     set_property(TARGET ${asm_lib_name} PROPERTY FOLDER ${AOM_TARGET_CPU})
-    if(BUILD_SHARED_LIBS)
-      target_sources(aom_static PRIVATE "$<TARGET_OBJECTS:${asm_lib_name}>")
-    endif()
     target_sources(aom PRIVATE "$<TARGET_OBJECTS:${asm_lib_name}>")
 
     # Add the new lib target to the global list of aom library targets.
diff --git a/common/ivf_dec.cmake b/common/ivf_dec.cmake
index fedeea7940..85040a8fd9 100644
--- a/common/ivf_dec.cmake
+++ b/common/ivf_dec.cmake
@@ -22,7 +22,4 @@ function(setup_ivf_dec_targets)
   add_library(ivf_dec OBJECT ${IVF_DEC_SOURCES})
   set(AOM_LIB_TARGETS ${AOM_LIB_TARGETS} ivf_dec PARENT_SCOPE)
   target_sources(aom PRIVATE $<TARGET_OBJECTS:ivf_dec>)
-  if(BUILD_SHARED_LIBS)
-    target_sources(aom_static PRIVATE $<TARGET_OBJECTS:ivf_dec>)
-  endif()
 endfunction()
-- 
2.34.1

